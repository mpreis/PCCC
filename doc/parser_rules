programm		=	{include} {declaration | structDec | arrayDec} {procedure} .

procedure	=	procHead "{" {decalaration} {command} "}" .
procHead		=	((typeSpec ["*"]) | "void") identifier "(" [procParList] ")" .
procParList	=	typeSpec (identifier | pointer) { "," typeSpec (identifier | pointer) } .

command		=	while | ifCmd | init | ret | procCall | (expression ";").

ifCmd		=	"if" "(" boolExp ")" block [else] .	
else	Cmd		=	"else" (ifCmd | block) .
whileLoop	=	"while" "(" boolExp ")" block .
ret			=	"return" expression ";" .

block		= 	"{" {command} "}" .

boolExp		=	expression { boolOp expression } .
expression 	= 	[ "-" ] term { ( "+" | "-" ) term } .
term 		= 	factor { ( "*" | "/" ) factor } .
factor 		= 	identifier | number | "(" expression ")" | procCall | reference .
reference	=	identifier "." identifier .
pointer		=	"*" identifier .

declaration	=	typeSpec (identifier | pointer) { "," (identifier | pointer) } ";" .
structDec	=	"typedef" "struct" "{" declaration {declaration} "}" identifier ";" .
arrayDec		=	typeSpec identifier "[" (number | identifier) "]" ";" .
procDec		=	procHead ";" .

init			=	identifier ["[" (number | identifier) "]"] "=" expression ";" .
procCall		=	identifier "(" [paramList]")" .
paramList	=	identifier {"," identifier} .

include		=	"include" fileName .
typeSpec		=	"int" | "char" .

boolOp		=	"==" | "!=" | "<=" | ">=" | "<" | ">" | "&&" | "||" .

fileName		=	identifier "." identifier .
identifier	=	letter {letter | digit} .
number		=	["-"] digit {digit} .
digit		=	"0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9" .  
letter		=	"a" | "b" | "c" | "d" | "e" | "f" | "g" | "h" | "i" | "j" | "k" | "l" | "m" | 
				"n" | "o" | "p" | "q" | "r" | "s" | "t" | "u" | "v" | "w" | "x" | "y" | "z" |
				"A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" |
				"N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" .
